workflow:
  # This specifies the valid branches for this workflow
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "raahbar"'
      when: always
    - when: never

default:
  tags: 
    - frontend

stages:
  - package
  - deploy

variables:
  KUBE_CONTEXT: dorsacloud/frontend/front-my:my-front-agent
  KUBE_CONTEXT_RAAHBAR: dorsacloud/frontend/front-my:raahbar-my-front-agent
  DOCKER_REGISTRY: git.dorsa.cloud:5050/dorsacloud/frontend/front-my


## Stage 1 : PACKAGE

package_stage:
  stage: package
  script:
    - docker build -f Dockerfile.stage -t $DOCKER_REGISTRY/front-my-stage:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/front-my-stage:latest .
    - docker push $DOCKER_REGISTRY/front-my-stage:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/front-my-stage:latest
  only:
    - main

package_production:
  stage: package
  script:
    - docker build -t $DOCKER_REGISTRY/front-my-production:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/front-my-production:latest .
    - docker push $DOCKER_REGISTRY/front-my-production:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/front-my-production:latest
  only:
    - main

package_raahbar:
  stage: package
  script:
    - docker build -t $DOCKER_REGISTRY/front-my-raahbar:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/front-my-raahbar:latest .
    - docker push $DOCKER_REGISTRY/front-my-raahbar:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/front-my-raahbar:latest
  only:
    - raahbar
# Stage 2 : DEPLOY

deploy_stage:
  stage: deploy
  needs: [package_stage]
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl -n stage apply -f $CI_PROJECT_DIR/deployments/front-my-stage.yaml
    - kubectl -n stage rollout restart deployment front-my-v1
  only:
    - main

deploy_production:
  stage: deploy
  needs: [package_production]
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl -n dorsa-cloud apply -f $CI_PROJECT_DIR/deployments/front-my-production.yaml
    - kubectl -n dorsa-cloud rollout restart deployment front-my-v1
  when: manual
  only: 
    - main

deploy_raahbar:
  stage: deploy
  needs: [package_raahbar]
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT_RAAHBAR
    - kubectl -n raahbar apply -f $CI_PROJECT_DIR/deployments/front-my-raahbar.yaml
    - kubectl -n raahbar rollout restart deployment front-my-v1
  when: manual
  only: 
    - raahbar