workflow:
  # This specifies the valid branches for this workflow
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never

default:
  tags: 
    - main-gitlab-runner

stages:
  - package
  - deploy

variables:
  KUBE_CONTEXT: dorsacloud/frontend/front-my:portal-front-agent
  DOCKER_REGISTRY: git.dorsacloud.com:5050/dorsacloud/frontend/front-my


## Stage 1 : PACKAGE

package_stage:
  stage: package
  script:
    - docker build -f Dockerfile.stage -t $DOCKER_REGISTRY/front-portal-stage:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/front-portal-stage:latest .
    - docker push $DOCKER_REGISTRY/front-portal-stage:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/front-portal-stage:latest

package_production:
  stage: package
  script:
    - docker build -t $DOCKER_REGISTRY/front-portal-production:$CI_PIPELINE_ID -t $DOCKER_REGISTRY/front-portal-production:latest .
    - docker push $DOCKER_REGISTRY/front-portal-production:$CI_PIPELINE_ID
    - docker push $DOCKER_REGISTRY/front-portal-production:latest

# Stage 2 : DEPLOY

deploy_stage:
  stage: deploy
  needs: [package_stage]
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl -n stage apply -f $CI_PROJECT_DIR/deployments/portal-front-stage.yaml
    - kubectl -n stage rollout restart deployment portal-front-v1

deploy_production:
  stage: deploy
  needs: [package_production]
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl -n platform apply -f $CI_PROJECT_DIR/deployments/portal-front-v1.yaml
    - kubectl -n platform rollout restart deployment portal-front-v1
  when: manual
